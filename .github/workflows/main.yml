name: BYTEPATH CI

on:
  push:
    tags: '*'
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      OUTPUT_FOLDER: ./build
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Build artfacts
        run: ./release.sh
      - name: Prepare Artifact Names
        run: |
          echo "ARTIFACT_NAME_LOVE=$(find build -iname '*.love' -printf '%f\n')" >> "$GITHUB_ENV"
          echo "ARTIFACT_NAME_WIN32=$(find build -iname '*win32*' -printf '%f\n')" >> "$GITHUB_ENV"
          echo "ARTIFACT_NAME_DEFAULT_APPIMAGE=$(find build -iname 'BYTEPATH*.AppImage' -printf '%f\n')" >> "$GITHUB_ENV"
          echo "ARTIFACT_NAME_DROP-IN_APPIMAGE=$(find build -iname 'game*.AppImage' -printf '%f\n')" >> "$GITHUB_ENV"
      - name: Upload Artifact (love)
        if: ${{ !github.event.act }} # skip during local actions testing
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME_LOVE }}
          path: build/${{ env.ARTIFACT_NAME_LOVE }}
      - name: Upload Artifact (win32)
        if: ${{ !github.event.act }} # skip during local actions testing
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME_WIN32 }}
          path: build/${{ env.ARTIFACT_NAME_WIN32 }}
      - name: Upload Artifact (default appimage)
        if: ${{ !github.event.act }} # skip during local actions testing
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME_DEFAULT_APPIMAGE }}
          path: build/${{ env.ARTIFACT_NAME_DEFAULT_APPIMAGE }}
      - name: Upload Artifact (drop-in appimage)
        if: ${{ !github.event.act }} # skip during local actions testing
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME_DROP-IN_APPIMAGE }}
          path: build/${{ env.ARTIFACT_NAME_DROP-IN_APPIMAGE }}
      - name: Upload release
        if: ${{ startsWith(github.ref, 'refs/tags/pre') || startsWith(github.ref, 'refs/tags/v') }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: build/*
          prerelease: ${{ startsWith(github.ref, 'refs/tags/pre') }}
